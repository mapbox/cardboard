#!/usr/bin/env node

var fs = require('fs'),
    Cardboard = require('./'),
    concat = require('concat-stream'),
    hat = require('hat'),
    geojsonNormalize = require('geojson-normalize'),
    JSONStream = require('JSONStream'),
    argv = require('minimist')(process.argv.slice(2));

require('dotenv').load();

var config = {
    awsKey: process.env.AWSKey || 'fake',
    awsSecret:  process.env.AWSSecret || 'fake',
    bucket: process.env.Bucket || 'mapbox-s2',
    region: process.env.Region
};

var cardboard = new Cardboard(config);
ready();

function ready() {
    if (!process.stdin.isTTY) {
        process.stdin.pipe(concat(function(buf) {
            var gj = geojsonNormalize(JSON.parse(buf));
            gj.features.forEach(function(feature) {
                var id = (((feature.id !== undefined) ?
                    feature.id : feature.properties.id))
                    id = hat();
                cardboard.insert(id, feature, argv.layer || 'default', function(err){
                    if(err) throw err;
                });
            });
        }));
        return;
    }
    if (argv.export) {
        cardboard.export()
            .pipe(process.stdout);
    } else if(argv.dump === 'geojson') {
        cardboard.dumpGeoJSON()
            .pipe(process.stdout);
    } else if(argv.dump) {
        cardboard.dump()
            .pipe(JSONStream.stringify())
            .pipe(process.stdout);
    }else if(argv.query) {
        cardboard.bboxQuery(
            argv.query.split(',').map(function(q){ return parseFloat(q); }),
            argv.layer || 'default',
            function(err, data){
            console.log(err, data);
        });
    }
}

function docs() {
    fs.createReadStream(__dirname + '/CLI.md').pipe(process.stdout);
}
